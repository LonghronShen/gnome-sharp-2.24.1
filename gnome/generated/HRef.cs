// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[Obsolete]
	public class HRef : Gtk.Button {

		[Obsolete]
		protected HRef(GLib.GType gtype) : base(gtype) {}
		public HRef(IntPtr raw) : base(raw) {}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_href_new(IntPtr url, IntPtr text);

		public HRef (string url, string text) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (HRef)) {
				ArrayList vals = new ArrayList();
				ArrayList names = new ArrayList();
				names.Add ("url");
				vals.Add (new GLib.Value (url));
				names.Add ("text");
				vals.Add (new GLib.Value (text));
				CreateNativeObject ((string[])names.ToArray (typeof (string)), (GLib.Value[])vals.ToArray (typeof (GLib.Value)));
				return;
			}
			IntPtr native_url = GLib.Marshaller.StringToPtrGStrdup (url);
			IntPtr native_text = GLib.Marshaller.StringToPtrGStrdup (text);
			Raw = gnome_href_new(native_url, native_text);
			GLib.Marshaller.Free (native_url);
			GLib.Marshaller.Free (native_text);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_href_get_url(IntPtr raw);

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_href_set_url(IntPtr raw, IntPtr url);

		[GLib.Property ("url")]
		public string Url {
			get  {
				IntPtr raw_ret = gnome_href_get_url(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gnome_href_set_url(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_href_get_text(IntPtr raw);

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_href_set_text(IntPtr raw, IntPtr text);

		[GLib.Property ("text")]
		public string Text {
			get  {
				IntPtr raw_ret = gnome_href_get_text(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
			set  {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gnome_href_set_text(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_href_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gnome_href_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
