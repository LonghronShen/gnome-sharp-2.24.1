// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class ModuleInfo : GLib.Opaque {

		[DllImport ("gnomesharpglue-2", CallingConvention = CallingConvention.Cdecl)]
		extern static uint gnomesharp_gnome_moduleinfo_get_name_offset ();

		static uint name_offset = gnomesharp_gnome_moduleinfo_get_name_offset ();
		public string Name {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + name_offset);
					return GLib.Marshaller.Utf8PtrToString ((*raw_ptr));
				}
			}
		}

		[DllImport ("gnomesharpglue-2", CallingConvention = CallingConvention.Cdecl)]
		extern static uint gnomesharp_gnome_moduleinfo_get_description_offset ();

		static uint description_offset = gnomesharp_gnome_moduleinfo_get_description_offset ();
		public string Description {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + description_offset);
					return GLib.Marshaller.Utf8PtrToString ((*raw_ptr));
				}
			}
		}

		[DllImport ("gnomesharpglue-2", CallingConvention = CallingConvention.Cdecl)]
		extern static uint gnomesharp_gnome_moduleinfo_get_version_offset ();

		static uint version_offset = gnomesharp_gnome_moduleinfo_get_version_offset ();
		public string Version {
			get {
				unsafe {
					IntPtr* raw_ptr = (IntPtr*)(((byte*)Handle) + version_offset);
					return GLib.Marshaller.Utf8PtrToString ((*raw_ptr));
				}
			}
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_module_info_get_type();

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = gnome_module_info_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		public ModuleInfo(IntPtr raw) : base(raw) {}

#endregion
	}
}
