// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[Obsolete]
	public class PixmapEntry : Gnome.FileEntry {

		[Obsolete]
		protected PixmapEntry(GLib.GType gtype) : base(gtype) {}
		public PixmapEntry(IntPtr raw) : base(raw) {}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_pixmap_entry_new(IntPtr history_id, IntPtr browse_dialog_title, bool do_preview);

		public PixmapEntry (string history_id, string browse_dialog_title, bool do_preview) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (PixmapEntry)) {
				ArrayList vals = new ArrayList();
				ArrayList names = new ArrayList();
				names.Add ("history_id");
				vals.Add (new GLib.Value (history_id));
				names.Add ("browse_dialog_title");
				vals.Add (new GLib.Value (browse_dialog_title));
				names.Add ("do_preview");
				vals.Add (new GLib.Value (do_preview));
				CreateNativeObject ((string[])names.ToArray (typeof (string)), (GLib.Value[])vals.ToArray (typeof (GLib.Value)));
				return;
			}
			IntPtr native_history_id = GLib.Marshaller.StringToPtrGStrdup (history_id);
			IntPtr native_browse_dialog_title = GLib.Marshaller.StringToPtrGStrdup (browse_dialog_title);
			Raw = gnome_pixmap_entry_new(native_history_id, native_browse_dialog_title, do_preview);
			GLib.Marshaller.Free (native_history_id);
			GLib.Marshaller.Free (native_browse_dialog_title);
		}

		[GLib.Property ("do_preview")]
		public bool DoPreview {
			get {
				GLib.Value val = GetProperty ("do_preview");
				bool ret = (bool) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("do_preview", val);
				val.Dispose ();
			}
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_pixmap_entry_set_preview_size(IntPtr raw, int preview_w, int preview_h);

		public void SetPreviewSize(int preview_w, int preview_h) {
			gnome_pixmap_entry_set_preview_size(Handle, preview_w, preview_h);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_pixmap_entry_set_pixmap_subdir(IntPtr raw, IntPtr subdir);

		public string PixmapSubdir { 
			set {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				gnome_pixmap_entry_set_pixmap_subdir(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_pixmap_entry_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gnome_pixmap_entry_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_pixmap_entry_set_preview(IntPtr raw, bool do_preview);

		public bool Preview { 
			set {
				gnome_pixmap_entry_set_preview(Handle, value);
			}
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_pixmap_entry_preview_widget(IntPtr raw);

		public Gtk.Widget PreviewWidget() {
			IntPtr raw_ret = gnome_pixmap_entry_preview_widget(Handle);
			Gtk.Widget ret = GLib.Object.GetObject(raw_ret) as Gtk.Widget;
			return ret;
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_pixmap_entry_scrolled_window(IntPtr raw);

		public Gtk.Widget ScrolledWindow() {
			IntPtr raw_ret = gnome_pixmap_entry_scrolled_window(Handle);
			Gtk.Widget ret = GLib.Object.GetObject(raw_ret) as Gtk.Widget;
			return ret;
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_pixmap_entry_construct(IntPtr raw, IntPtr history_id, IntPtr browse_dialog_title, bool do_preview);

		public void Construct(string history_id, string browse_dialog_title, bool do_preview) {
			IntPtr native_history_id = GLib.Marshaller.StringToPtrGStrdup (history_id);
			IntPtr native_browse_dialog_title = GLib.Marshaller.StringToPtrGStrdup (browse_dialog_title);
			gnome_pixmap_entry_construct(Handle, native_history_id, native_browse_dialog_title, do_preview);
			GLib.Marshaller.Free (native_history_id);
			GLib.Marshaller.Free (native_browse_dialog_title);
		}

#endregion
	}
}
