// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GnomeSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate double PasswordDialogQualityFuncNative(IntPtr password_dialog, IntPtr password, IntPtr user_data);

	internal class PasswordDialogQualityFuncInvoker {

		PasswordDialogQualityFuncNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~PasswordDialogQualityFuncInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal PasswordDialogQualityFuncInvoker (PasswordDialogQualityFuncNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal PasswordDialogQualityFuncInvoker (PasswordDialogQualityFuncNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal PasswordDialogQualityFuncInvoker (PasswordDialogQualityFuncNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gnome.PasswordDialogQualityFunc Handler {
			get {
				return new Gnome.PasswordDialogQualityFunc(InvokeNative);
			}
		}

		double InvokeNative (Gnome.PasswordDialog password_dialog, string password)
		{
			IntPtr native_password = GLib.Marshaller.StringToPtrGStrdup (password);
			double result = native_cb (password_dialog == null ? IntPtr.Zero : password_dialog.Handle, native_password, __data);
			GLib.Marshaller.Free (native_password);
			return result;
		}
	}

	internal class PasswordDialogQualityFuncWrapper {

		public double NativeCallback (IntPtr password_dialog, IntPtr password, IntPtr user_data)
		{
			try {
				double __ret = managed (GLib.Object.GetObject(password_dialog) as Gnome.PasswordDialog, GLib.Marshaller.Utf8PtrToString (password));
				if (release_on_call)
					gch.Free ();
				return __ret;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: Above call does not return.
				throw e;
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal PasswordDialogQualityFuncNative NativeDelegate;
		Gnome.PasswordDialogQualityFunc managed;

		public PasswordDialogQualityFuncWrapper (Gnome.PasswordDialogQualityFunc managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new PasswordDialogQualityFuncNative (NativeCallback);
		}

		public static Gnome.PasswordDialogQualityFunc GetManagedDelegate (PasswordDialogQualityFuncNative native)
		{
			if (native == null)
				return null;
			PasswordDialogQualityFuncWrapper wrapper = (PasswordDialogQualityFuncWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
