// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Icon {

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_icon_lookup(IntPtr icon_theme, IntPtr thumbnail_factory, IntPtr file_uri, IntPtr custom_icon, IntPtr file_info, IntPtr mime_type, int flags, out int result);

		public static string Lookup(Gtk.IconTheme icon_theme, Gnome.ThumbnailFactory thumbnail_factory, string file_uri, string custom_icon, Gnome.Vfs.FileInfo file_info, string mime_type, Gnome.IconLookupFlags flags, out Gnome.IconLookupResultFlags result) {
			IntPtr native_file_uri = GLib.Marshaller.StringToPtrGStrdup (file_uri);
			IntPtr native_custom_icon = GLib.Marshaller.StringToPtrGStrdup (custom_icon);
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int native_result;
			IntPtr raw_ret = gnome_icon_lookup(icon_theme == null ? IntPtr.Zero : icon_theme.Handle, thumbnail_factory == null ? IntPtr.Zero : thumbnail_factory.Handle, native_file_uri, native_custom_icon, file_info == null ? IntPtr.Zero : file_info.Handle, native_mime_type, (int) flags, out native_result);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_file_uri);
			GLib.Marshaller.Free (native_custom_icon);
			GLib.Marshaller.Free (native_mime_type);
			result = (Gnome.IconLookupResultFlags) native_result;
			return ret;
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_icon_lookup_sync(IntPtr icon_theme, IntPtr thumbnail_factory, IntPtr file_uri, IntPtr custom_icon, int flags, out int result);

		public static string LookupSync(Gtk.IconTheme icon_theme, Gnome.ThumbnailFactory thumbnail_factory, string file_uri, string custom_icon, Gnome.IconLookupFlags flags, out Gnome.IconLookupResultFlags result) {
			IntPtr native_file_uri = GLib.Marshaller.StringToPtrGStrdup (file_uri);
			IntPtr native_custom_icon = GLib.Marshaller.StringToPtrGStrdup (custom_icon);
			int native_result;
			IntPtr raw_ret = gnome_icon_lookup_sync(icon_theme == null ? IntPtr.Zero : icon_theme.Handle, thumbnail_factory == null ? IntPtr.Zero : thumbnail_factory.Handle, native_file_uri, native_custom_icon, (int) flags, out native_result);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_file_uri);
			GLib.Marshaller.Free (native_custom_icon);
			result = (Gnome.IconLookupResultFlags) native_result;
			return ret;
		}

#endregion
	}
}
