// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Triggers {

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_triggers_vdo(IntPtr msg, IntPtr level, IntPtr[] supinfo);

		public static void Vdo(string msg, string level, string[] supinfo) {
			IntPtr native_msg = GLib.Marshaller.StringToPtrGStrdup (msg);
			IntPtr native_level = GLib.Marshaller.StringToPtrGStrdup (level);
			int cnt_supinfo = supinfo == null ? 0 : supinfo.Length;
			IntPtr[] native_supinfo = new IntPtr [cnt_supinfo];
			for (int i = 0; i < cnt_supinfo; i++)
				native_supinfo [i] = GLib.Marshaller.StringToPtrGStrdup (supinfo[i]);
			gnome_triggers_vdo(native_msg, native_level, native_supinfo);
			GLib.Marshaller.Free (native_msg);
			GLib.Marshaller.Free (native_level);
			for (int i = 0; i < native_supinfo.Length; i++) {
				supinfo [i] = GLib.Marshaller.Utf8PtrToString (native_supinfo[i]);
				GLib.Marshaller.Free (native_supinfo[i]);
			}
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_triggers_vadd_trigger(IntPtr nt, IntPtr[] supinfo);

		public static void VaddTrigger(Gnome.Trigger nt, string[] supinfo) {
			IntPtr native_nt = GLib.Marshaller.StructureToPtrAlloc (nt);
			int cnt_supinfo = supinfo == null ? 0 : supinfo.Length;
			IntPtr[] native_supinfo = new IntPtr [cnt_supinfo];
			for (int i = 0; i < cnt_supinfo; i++)
				native_supinfo [i] = GLib.Marshaller.StringToPtrGStrdup(supinfo[i]);
			gnome_triggers_vadd_trigger(native_nt, native_supinfo);
			nt = Gnome.Trigger.New (native_nt);
			Marshal.FreeHGlobal (native_nt);
		}

#endregion
	}
}
