// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Config {

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_config_init_iterator_(IntPtr path, bool priv);

		[Obsolete]
		public static IntPtr InitIterator_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr raw_ret = gnome_config_init_iterator_(native_path, priv);
			IntPtr ret = raw_ret;
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_config_get_bool_with_default_(IntPtr path, out bool def, bool priv);

		[Obsolete]
		public static bool GetBoolWithDefault_(string path, out bool def, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			bool raw_ret = gnome_config_get_bool_with_default_(native_path, out def, priv);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_config_sync();

		[Obsolete]
		public static bool Sync() {
			bool raw_ret = gnome_config_sync();
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_drop_file_(IntPtr path, bool priv);

		[Obsolete]
		public static void DropFile_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_drop_file_(native_path, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_set_int_(IntPtr path, int value, bool priv);

		[Obsolete]
		public static void SetInt_(string path, int value, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_set_int_(native_path, value, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_set_bool_(IntPtr path, bool value, bool priv);

		[Obsolete]
		public static void SetBool_(string path, bool value, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_set_bool_(native_path, value, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_clean_key_(IntPtr path, bool priv);

		[Obsolete]
		public static void CleanKey_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_clean_key_(native_path, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_config_get_int_with_default_(IntPtr path, out bool def, bool priv);

		[Obsolete]
		public static int GetIntWithDefault_(string path, out bool def, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			int raw_ret = gnome_config_get_int_with_default_(native_path, out def, priv);
			int ret = raw_ret;
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_drop_all();

		[Obsolete]
		public static void DropAll() {
			gnome_config_drop_all();
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_config_get_translated_string_with_default_(IntPtr path, out bool def, bool priv);

		[Obsolete]
		public static string GetTranslatedStringWithDefault_(string path, out bool def, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr raw_ret = gnome_config_get_translated_string_with_default_(native_path, out def, priv);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_set_string_(IntPtr path, IntPtr value, bool priv);

		[Obsolete]
		public static void SetString_(string path, string value, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
			gnome_config_set_string_(native_path, native_value, priv);
			GLib.Marshaller.Free (native_path);
			GLib.Marshaller.Free (native_value);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_get_vector_with_default_(IntPtr path, out int argcp, IntPtr argvp, out bool def, bool priv);

		[Obsolete]
		public static void GetVectorWithDefault_(string path, out int argcp, string argvp, out bool def, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_get_vector_with_default_(native_path, out argcp, GLib.Marshaller.StringToPtrGStrdup(argvp), out def, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_clean_section_(IntPtr path, bool priv);

		[Obsolete]
		public static void CleanSection_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_clean_section_(native_path, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_config_sync_file_(IntPtr path, bool priv);

		[Obsolete]
		public static bool SyncFile_(string path, bool priv) {
			bool raw_ret = gnome_config_sync_file_(GLib.Marshaller.StringToPtrGStrdup(path), priv);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_config_has_section_(IntPtr path, bool priv);

		[Obsolete]
		public static bool HasSection_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			bool raw_ret = gnome_config_has_section_(native_path, priv);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_set_float_(IntPtr path, double value, bool priv);

		[Obsolete]
		public static void SetFloat_(string path, double value, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_set_float_(native_path, value, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_config_assemble_vector(int argc, IntPtr argv);

		[Obsolete]
		public static string AssembleVector(int argc, string argv) {
			IntPtr native_argv = GLib.Marshaller.StringToPtrGStrdup (argv);
			IntPtr raw_ret = gnome_config_assemble_vector(argc, native_argv);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_argv);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_clean_file_(IntPtr path, bool priv);

		[Obsolete]
		public static void CleanFile_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_clean_file_(native_path, priv);
			GLib.Marshaller.Free (native_path);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_pop_prefix();

		[Obsolete]
		public static void PopPrefix() {
			gnome_config_pop_prefix();
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_set_translated_string_(IntPtr path, IntPtr value, bool priv);

		[Obsolete]
		public static void SetTranslatedString_(string path, string value, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
			gnome_config_set_translated_string_(native_path, native_value, priv);
			GLib.Marshaller.Free (native_path);
			GLib.Marshaller.Free (native_value);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_config_get_string_with_default_(IntPtr path, out bool def, bool priv);

		[Obsolete]
		public static string GetStringWithDefault_(string path, out bool def, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr raw_ret = gnome_config_get_string_with_default_(native_path, out def, priv);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern double gnome_config_get_float_with_default_(IntPtr path, out bool def, bool priv);

		[Obsolete]
		public static double GetFloatWithDefault_(string path, out bool def, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			double raw_ret = gnome_config_get_float_with_default_(native_path, out def, priv);
			double ret = raw_ret;
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_config_init_iterator_sections_(IntPtr path, bool priv);

		[Obsolete]
		public static IntPtr InitIteratorSections_(string path, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr raw_ret = gnome_config_init_iterator_sections_(native_path, priv);
			IntPtr ret = raw_ret;
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_set_vector_(IntPtr path, int argc, IntPtr[] argv, bool priv);

		[Obsolete]
		public static void SetVector_(string path, int argc, string[] argv, bool priv) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			int cnt_argv = argv == null ? 0 : argv.Length;
			IntPtr[] native_argv = new IntPtr [cnt_argv];
			for (int i = 0; i < cnt_argv; i++)
				native_argv [i] = GLib.Marshaller.StringToPtrGStrdup (argv[i]);
			gnome_config_set_vector_(native_path, argc, native_argv, priv);
			GLib.Marshaller.Free (native_path);
			for (int i = 0; i < native_argv.Length; i++) {
				argv [i] = GLib.Marshaller.Utf8PtrToString (native_argv[i]);
				GLib.Marshaller.Free (native_argv[i]);
			}
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_make_vector(IntPtr str1ng, out int argcp, IntPtr argvp);

		[Obsolete]
		public static int MakeVector(string str1ng, string argvp) {
			int argcp;
			IntPtr native_str1ng = GLib.Marshaller.StringToPtrGStrdup (str1ng);
			gnome_config_make_vector(native_str1ng, out argcp, GLib.Marshaller.StringToPtrGStrdup(argvp));
			GLib.Marshaller.Free (native_str1ng);
			return argcp;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_config_iterator_next(IntPtr iterator_handle, IntPtr key, IntPtr value);

		[Obsolete]
		public static IntPtr IteratorNext(IntPtr iterator_handle, string key, string value) {
			IntPtr raw_ret = gnome_config_iterator_next(iterator_handle, GLib.Marshaller.StringToPtrGStrdup(key), GLib.Marshaller.StringToPtrGStrdup(value));
			IntPtr ret = raw_ret;
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_config_push_prefix(IntPtr path);

		[Obsolete]
		public static void PushPrefix(string path) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			gnome_config_push_prefix(native_path);
			GLib.Marshaller.Free (native_path);
		}

#endregion
	}
}
