// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class CanvasLine : Gnome.CanvasItem {

		[Obsolete]
		protected CanvasLine(GLib.GType gtype) : base(gtype) {}
		public CanvasLine(IntPtr raw) : base(raw) {}

		protected CanvasLine() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[GLib.Property ("fill_color")]
		public string FillColor {
			get {
				GLib.Value val = GetProperty ("fill_color");
				string ret = (string) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("fill_color", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("width_pixels")]
		public uint WidthPixels {
			get {
				GLib.Value val = GetProperty ("width_pixels");
				uint ret = (uint) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("width_pixels", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("arrow_shape_c")]
		public double ArrowShapeC {
			get {
				GLib.Value val = GetProperty ("arrow_shape_c");
				double ret = (double) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("arrow_shape_c", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("width_units")]
		public double WidthUnits {
			get {
				GLib.Value val = GetProperty ("width_units");
				double ret = (double) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("width_units", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("fill_color_gdk")]
		public Gdk.Color FillColorGdk {
			get {
				GLib.Value val = GetProperty ("fill_color_gdk");
				Gdk.Color ret = (Gdk.Color) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = (GLib.Value) value;
				SetProperty("fill_color_gdk", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("fill_color_rgba")]
		public uint FillColorRgba {
			get {
				GLib.Value val = GetProperty ("fill_color_rgba");
				uint ret = (uint) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("fill_color_rgba", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("join_style")]
		public Gdk.JoinStyle JoinStyle {
			get {
				GLib.Value val = GetProperty ("join_style");
				Gdk.JoinStyle ret = (Gdk.JoinStyle) (Enum) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value((Enum) value);
				SetProperty("join_style", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("cap_style")]
		public Gdk.CapStyle CapStyle {
			get {
				GLib.Value val = GetProperty ("cap_style");
				Gdk.CapStyle ret = (Gdk.CapStyle) (Enum) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value((Enum) value);
				SetProperty("cap_style", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("last_arrowhead")]
		public bool LastArrowhead {
			get {
				GLib.Value val = GetProperty ("last_arrowhead");
				bool ret = (bool) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("last_arrowhead", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("spline_steps")]
		public uint SplineSteps {
			get {
				GLib.Value val = GetProperty ("spline_steps");
				uint ret = (uint) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("spline_steps", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("first_arrowhead")]
		public bool FirstArrowhead {
			get {
				GLib.Value val = GetProperty ("first_arrowhead");
				bool ret = (bool) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("first_arrowhead", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("points")]
		public Gnome.CanvasPoints Points {
			get {
				GLib.Value val = GetProperty ("points");
				Gnome.CanvasPoints ret = (Gnome.CanvasPoints) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value, "GnomeCanvasPoints");
				SetProperty("points", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("line_style")]
		public Gdk.LineStyle LineStyle {
			get {
				GLib.Value val = GetProperty ("line_style");
				Gdk.LineStyle ret = (Gdk.LineStyle) (Enum) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value((Enum) value);
				SetProperty("line_style", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("smooth")]
		public bool Smooth {
			get {
				GLib.Value val = GetProperty ("smooth");
				bool ret = (bool) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("smooth", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("arrow_shape_a")]
		public double ArrowShapeA {
			get {
				GLib.Value val = GetProperty ("arrow_shape_a");
				double ret = (double) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("arrow_shape_a", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("arrow_shape_b")]
		public double ArrowShapeB {
			get {
				GLib.Value val = GetProperty ("arrow_shape_b");
				double ret = (double) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("arrow_shape_b", val);
				val.Dispose ();
			}
		}

		[GLib.Property ("fill_stipple")]
		public Gdk.Drawable FillStipple {
			get {
				GLib.Value val = GetProperty ("fill_stipple");
				Gdk.Drawable ret = (Gdk.Drawable) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("fill_stipple", val);
				val.Dispose ();
			}
		}

		[DllImport("gnomecanvas-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_canvas_line_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gnome_canvas_line_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
#region Customized extensions
#line 1 "CanvasLine.custom"
//
// Gnome.CanvasLine.custom - Gnome CanvasLine class customizations
//
// Author: Rachel Hestilow <hestilow@ximian.com>
//
// Copyright (C) 2002 Rachel Hestilow
//
// This code is inserted after the automatically generated code.
//
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.
	
	
public CanvasLine (Gnome.CanvasGroup group) : base (group, GType)
{
}


#endregion
	}
}
