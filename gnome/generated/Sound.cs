// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Sound {

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_sound_sample_load(IntPtr sample_name, IntPtr filename);

		public static int SampleLoad(string sample_name, string filename) {
			IntPtr native_sample_name = GLib.Marshaller.StringToPtrGStrdup (sample_name);
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			int raw_ret = gnome_sound_sample_load(native_sample_name, native_filename);
			int ret = raw_ret;
			GLib.Marshaller.Free (native_sample_name);
			GLib.Marshaller.Free (native_filename);
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_sound_init(IntPtr hostname);

		public static void Init(string hostname) {
			IntPtr native_hostname = GLib.Marshaller.StringToPtrGStrdup (hostname);
			gnome_sound_init(native_hostname);
			GLib.Marshaller.Free (native_hostname);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_sound_play(IntPtr filename);

		public static void Play(string filename) {
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			gnome_sound_play(native_filename);
			GLib.Marshaller.Free (native_filename);
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_sound_connection_get();

		public static int ConnectionGet() {
			int raw_ret = gnome_sound_connection_get();
			int ret = raw_ret;
			return ret;
		}

		[DllImport("gnome-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_sound_shutdown();

		public static void Shutdown() {
			gnome_sound_shutdown();
		}

#endregion
	}
}
