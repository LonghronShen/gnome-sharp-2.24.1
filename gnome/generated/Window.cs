// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Window {

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_icon_set_from_file(IntPtr w, IntPtr filename);

		[Obsolete]
		public static void IconSetFromFile(Gtk.Window w, string filename) {
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			gnome_window_icon_set_from_file(w == null ? IntPtr.Zero : w.Handle, native_filename);
			GLib.Marshaller.Free (native_filename);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_icon_set_from_file_list(IntPtr w, IntPtr filenames);

		[Obsolete]
		public static void IconSetFromFileList(Gtk.Window w, string filenames) {
			IntPtr native_filenames = GLib.Marshaller.StringToPtrGStrdup (filenames);
			gnome_window_icon_set_from_file_list(w == null ? IntPtr.Zero : w.Handle, native_filenames);
			GLib.Marshaller.Free (native_filenames);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_icon_set_default_from_file(IntPtr filename);

		[Obsolete]
		public static void IconSetDefaultFromFile(string filename) {
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			gnome_window_icon_set_default_from_file(native_filename);
			GLib.Marshaller.Free (native_filename);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_icon_init();

		[Obsolete]
		public static void IconInit() {
			gnome_window_icon_init();
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_icon_set_default_from_file_list(IntPtr filenames);

		[Obsolete]
		public static void IconSetDefaultFromFileList(string filenames) {
			IntPtr native_filenames = GLib.Marshaller.StringToPtrGStrdup (filenames);
			gnome_window_icon_set_default_from_file_list(native_filenames);
			GLib.Marshaller.Free (native_filenames);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_icon_set_from_default(IntPtr w);

		[Obsolete]
		public static void IconSetFromDefault(Gtk.Window w) {
			gnome_window_icon_set_from_default(w == null ? IntPtr.Zero : w.Handle);
		}

		[DllImport("gnomeui-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_window_toplevel_set_title(IntPtr window, IntPtr doc_name, IntPtr app_name, IntPtr extension);

		[Obsolete]
		public static void ToplevelSetTitle(Gtk.Window window, string doc_name, string app_name, string extension) {
			IntPtr native_doc_name = GLib.Marshaller.StringToPtrGStrdup (doc_name);
			IntPtr native_app_name = GLib.Marshaller.StringToPtrGStrdup (app_name);
			IntPtr native_extension = GLib.Marshaller.StringToPtrGStrdup (extension);
			gnome_window_toplevel_set_title(window == null ? IntPtr.Zero : window.Handle, native_doc_name, native_app_name, native_extension);
			GLib.Marshaller.Free (native_doc_name);
			GLib.Marshaller.Free (native_app_name);
			GLib.Marshaller.Free (native_extension);
		}

#endregion
	}
}
