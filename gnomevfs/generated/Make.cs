// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome.Vfs {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Make {

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_uri_full_from_relative(IntPtr base_uri, IntPtr relative_uri);

		[Obsolete]
		public static string UriFullFromRelative(string base_uri, string relative_uri) {
			IntPtr native_base_uri = GLib.Marshaller.StringToPtrGStrdup (base_uri);
			IntPtr native_relative_uri = GLib.Marshaller.StringToPtrGStrdup (relative_uri);
			IntPtr raw_ret = gnome_vfs_make_uri_full_from_relative(native_base_uri, native_relative_uri);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_base_uri);
			GLib.Marshaller.Free (native_relative_uri);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_uri_canonical_strip_fragment(IntPtr uri);

		public static string UriCanonicalStripFragment(string uri) {
			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
			IntPtr raw_ret = gnome_vfs_make_uri_canonical_strip_fragment(native_uri);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_uri);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_make_directory(IntPtr text_uri, uint perm);

		public static Gnome.Vfs.Result Directory(string text_uri, uint perm) {
			IntPtr native_text_uri = GLib.Marshaller.StringToPtrGStrdup (text_uri);
			int raw_ret = gnome_vfs_make_directory(native_text_uri, perm);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_text_uri);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_path_name_canonical(IntPtr path);

		public static string PathNameCanonical(string path) {
			IntPtr native_path = GLib.Marshaller.StringToPtrGStrdup (path);
			IntPtr raw_ret = gnome_vfs_make_path_name_canonical(native_path);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_path);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_uri_from_input_with_trailing_ws(IntPtr location);

		public static string UriFromInputWithTrailingWs(string location) {
			IntPtr native_location = GLib.Marshaller.StringToPtrGStrdup (location);
			IntPtr raw_ret = gnome_vfs_make_uri_from_input_with_trailing_ws(native_location);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_location);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_uri_canonical(IntPtr uri);

		public static string UriCanonical(string uri) {
			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
			IntPtr raw_ret = gnome_vfs_make_uri_canonical(native_uri);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_uri);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_make_directory_for_uri(IntPtr uri, uint perm);

		public static Gnome.Vfs.Result DirectoryForUri(Gnome.Vfs.Uri uri, uint perm) {
			int raw_ret = gnome_vfs_make_directory_for_uri(uri == null ? IntPtr.Zero : uri.Handle, perm);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_make_directory_for_uri_cancellable(IntPtr uri, uint perm, IntPtr context);

		public static Gnome.Vfs.Result DirectoryForUriCancellable(Gnome.Vfs.Uri uri, uint perm, Gnome.Vfs.Context context) {
			int raw_ret = gnome_vfs_make_directory_for_uri_cancellable(uri == null ? IntPtr.Zero : uri.Handle, perm, context == null ? IntPtr.Zero : context.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_uri_from_input(IntPtr location);

		public static string UriFromInput(string location) {
			IntPtr native_location = GLib.Marshaller.StringToPtrGStrdup (location);
			IntPtr raw_ret = gnome_vfs_make_uri_from_input(native_location);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_location);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_make_uri_from_shell_arg(IntPtr uri);

		public static string UriFromShellArg(string uri) {
			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
			IntPtr raw_ret = gnome_vfs_make_uri_from_shell_arg(native_uri);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_uri);
			return ret;
		}

#endregion
	}
}
