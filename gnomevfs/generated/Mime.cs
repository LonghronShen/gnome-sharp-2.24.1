// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome.Vfs {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Mime {

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_add_extension(IntPtr mime_type, IntPtr extension);

		[Obsolete]
		public static Gnome.Vfs.Result AddExtension(string mime_type, string extension) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_extension = GLib.Marshaller.StringToPtrGStrdup (extension);
			int raw_ret = gnome_vfs_mime_add_extension(native_mime_type, native_extension);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_extension);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_short_list_components(IntPtr mime_type, IntPtr component_iids);

		[Obsolete]
		public static Gnome.Vfs.Result SetShortListComponents(string mime_type, GLib.List component_iids) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_set_short_list_components(native_mime_type, component_iids == null ? IntPtr.Zero : component_iids.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_short_list_components(IntPtr mime_type);

		[Obsolete]
		public static GLib.List GetShortListComponents(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_short_list_components(native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_shutdown();

		[Obsolete]
		public static void Shutdown() {
			gnome_vfs_mime_shutdown();
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_add_component_to_short_list(IntPtr mime_type, IntPtr iid);

		[Obsolete]
		public static Gnome.Vfs.Result AddComponentToShortList(string mime_type, string iid) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_iid = GLib.Marshaller.StringToPtrGStrdup (iid);
			int raw_ret = gnome_vfs_mime_add_component_to_short_list(native_mime_type, native_iid);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_iid);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_reload();

		public static void Reload() {
			gnome_vfs_mime_reload();
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_registered_mime_type_list_free(IntPtr list);

		[Obsolete]
		public static void RegisteredMimeTypeListFree(GLib.List list) {
			gnome_vfs_mime_registered_mime_type_list_free(list == null ? IntPtr.Zero : list.Handle);
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_id_list_from_application_list(IntPtr applications);

		[Obsolete]
		public static GLib.List IdListFromApplicationList(GLib.List applications) {
			IntPtr raw_ret = gnome_vfs_mime_id_list_from_application_list(applications == null ? IntPtr.Zero : applications.Handle);
			GLib.List ret = new GLib.List(raw_ret);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_all_desktop_entries(IntPtr mime_type);

		[Obsolete]
		public static GLib.List GetAllDesktopEntries(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_all_desktop_entries(native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_extensions_list(IntPtr mime_type);

		public static GLib.List GetExtensionsList(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_extensions_list(native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_all_applications_for_uri(IntPtr uri, IntPtr mime_type);

		public static GLib.List GetAllApplicationsForUri(string uri, string mime_type) {
			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_all_applications_for_uri(native_uri, native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_uri);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_key_list(IntPtr mime_type);

		[Obsolete]
		public static GLib.List GetKeyList(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_key_list(native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_short_list_applications(IntPtr mime_type);

		[Obsolete]
		public static GLib.List GetShortListApplications(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_short_list_applications(native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_value(IntPtr mime_type, IntPtr key, IntPtr value);

		[Obsolete]
		public static Gnome.Vfs.Result SetValue(string mime_type, string key, string value) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_key = GLib.Marshaller.StringToPtrGStrdup (key);
			IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
			int raw_ret = gnome_vfs_mime_set_value(native_mime_type, native_key, native_value);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_key);
			GLib.Marshaller.Free (native_value);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_all_applications(IntPtr mime_type);

		public static Gnome.Vfs.MimeApplication[] GetAllApplications(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_all_applications(native_mime_type);
			Gnome.Vfs.MimeApplication[] ret = (Gnome.Vfs.MimeApplication[]) GLib.Marshaller.ListPtrToArray (raw_ret, typeof(GLib.List), true, true, typeof(Gnome.Vfs.MimeApplication));
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_registered_type_key(IntPtr mime_type, IntPtr key, IntPtr data);

		public static Gnome.Vfs.Result SetRegisteredTypeKey(string mime_type, string key, string data) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_key = GLib.Marshaller.StringToPtrGStrdup (key);
			IntPtr native_data = GLib.Marshaller.StringToPtrGStrdup (data);
			int raw_ret = gnome_vfs_mime_set_registered_type_key(native_mime_type, native_key, native_data);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_key);
			GLib.Marshaller.Free (native_data);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_freeze();

		public static void Freeze() {
			gnome_vfs_mime_freeze();
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_can_be_executable(IntPtr mime_type, bool new_value);

		[Obsolete]
		public static Gnome.Vfs.Result SetCanBeExecutable(string mime_type, bool new_value) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_set_can_be_executable(native_mime_type, new_value);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_type_get_equivalence(IntPtr mime_type, IntPtr base_mime_type);

		public static Gnome.Vfs.MimeEquivalence TypeGetEquivalence(string mime_type, string base_mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_base_mime_type = GLib.Marshaller.StringToPtrGStrdup (base_mime_type);
			int raw_ret = gnome_vfs_mime_type_get_equivalence(native_mime_type, native_base_mime_type);
			Gnome.Vfs.MimeEquivalence ret = (Gnome.Vfs.MimeEquivalence) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_base_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_remove_extension(IntPtr mime_type, IntPtr extension);

		[Obsolete]
		public static Gnome.Vfs.Result RemoveExtension(string mime_type, string extension) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_extension = GLib.Marshaller.StringToPtrGStrdup (extension);
			int raw_ret = gnome_vfs_mime_remove_extension(native_mime_type, native_extension);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_extension);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_registered_mime_type_delete(IntPtr mime_type);

		[Obsolete]
		public static void RegisteredMimeTypeDelete(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			gnome_vfs_mime_registered_mime_type_delete(native_mime_type);
			GLib.Marshaller.Free (native_mime_type);
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_extensions_pretty_string(IntPtr mime_type);

		[Obsolete]
		public static string GetExtensionsPrettyString(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_extensions_pretty_string(native_mime_type);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_remove_component_from_short_list(IntPtr mime_type, IntPtr iid);

		[Obsolete]
		public static Gnome.Vfs.Result RemoveComponentFromShortList(string mime_type, string iid) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_iid = GLib.Marshaller.StringToPtrGStrdup (iid);
			int raw_ret = gnome_vfs_mime_remove_component_from_short_list(native_mime_type, native_iid);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_iid);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_default_application(IntPtr mime_type);

		public static Gnome.Vfs.MimeApplication GetDefaultApplication(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_default_application(native_mime_type);
			Gnome.Vfs.MimeApplication ret = raw_ret == IntPtr.Zero ? null : (Gnome.Vfs.MimeApplication) GLib.Opaque.GetOpaque (raw_ret, typeof (Gnome.Vfs.MimeApplication), false);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_description(IntPtr mime_type);

		public static string GetDescription(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_description(native_mime_type);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_add_application_to_short_list(IntPtr mime_type, IntPtr application_id);

		[Obsolete]
		public static Gnome.Vfs.Result AddApplicationToShortList(string mime_type, string application_id) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_application_id = GLib.Marshaller.StringToPtrGStrdup (application_id);
			int raw_ret = gnome_vfs_mime_add_application_to_short_list(native_mime_type, native_application_id);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_application_id);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_icon(IntPtr mime_type);

		[Obsolete]
		public static string GetIcon(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_icon(native_mime_type);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_type_from_name(IntPtr filename);

		[Obsolete]
		public static string TypeFromName(string filename) {
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			IntPtr raw_ret = gnome_vfs_mime_type_from_name(native_filename);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			GLib.Marshaller.Free (native_filename);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_icon(IntPtr mime_type, IntPtr filename);

		[Obsolete]
		public static Gnome.Vfs.Result SetIcon(string mime_type, string filename) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			int raw_ret = gnome_vfs_mime_set_icon(native_mime_type, native_filename);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_filename);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_remove_from_all_applications(IntPtr mime_type, IntPtr application_ids);

		[Obsolete]
		public static Gnome.Vfs.Result RemoveFromAllApplications(string mime_type, GLib.List application_ids) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_remove_from_all_applications(native_mime_type, application_ids == null ? IntPtr.Zero : application_ids.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_remove_application_from_short_list(IntPtr mime_type, IntPtr application_id);

		[Obsolete]
		public static Gnome.Vfs.Result RemoveApplicationFromShortList(string mime_type, string application_id) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_application_id = GLib.Marshaller.StringToPtrGStrdup (application_id);
			int raw_ret = gnome_vfs_mime_remove_application_from_short_list(native_mime_type, native_application_id);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_application_id);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_extensions_string(IntPtr mime_type);

		[Obsolete]
		public static string GetExtensionsString(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_extensions_string(native_mime_type);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_info_cache_reload(IntPtr dir);

		public static void InfoCacheReload(string dir) {
			IntPtr native_dir = GLib.Marshaller.StringToPtrGStrdup (dir);
			gnome_vfs_mime_info_cache_reload(native_dir);
			GLib.Marshaller.Free (native_dir);
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_extend_all_applications(IntPtr mime_type, IntPtr application_ids);

		[Obsolete]
		public static Gnome.Vfs.Result ExtendAllApplications(string mime_type, GLib.List application_ids) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_extend_all_applications(native_mime_type, application_ids == null ? IntPtr.Zero : application_ids.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_vfs_mime_type_is_supertype(IntPtr mime_type);

		public static bool TypeIsSupertype(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			bool raw_ret = gnome_vfs_mime_type_is_supertype(native_mime_type);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_info_reload();

		public static void InfoReload() {
			gnome_vfs_mime_info_reload();
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_remove_component_from_list(IntPtr components, IntPtr iid, out bool did_remove);

		[Obsolete]
		public static GLib.List RemoveComponentFromList(GLib.List components, string iid, out bool did_remove) {
			IntPtr native_iid = GLib.Marshaller.StringToPtrGStrdup (iid);
			IntPtr raw_ret = gnome_vfs_mime_remove_component_from_list(components == null ? IntPtr.Zero : components.Handle, native_iid, out did_remove);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_iid);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_default_application(IntPtr mime_type, IntPtr application_id);

		[Obsolete]
		public static Gnome.Vfs.Result SetDefaultApplication(string mime_type, string application_id) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_application_id = GLib.Marshaller.StringToPtrGStrdup (application_id);
			int raw_ret = gnome_vfs_mime_set_default_application(native_mime_type, native_application_id);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_application_id);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_vfs_mime_id_in_application_list(IntPtr id, IntPtr applications);

		[Obsolete]
		public static bool IdInApplicationList(string id, GLib.List applications) {
			IntPtr native_id = GLib.Marshaller.StringToPtrGStrdup (id);
			bool raw_ret = gnome_vfs_mime_id_in_application_list(native_id, applications == null ? IntPtr.Zero : applications.Handle);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_id);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_vfs_mime_type_is_known(IntPtr mime_type);

		public static bool TypeIsKnown(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			bool raw_ret = gnome_vfs_mime_type_is_known(native_mime_type);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_id_list_from_component_list(IntPtr components);

		[Obsolete]
		public static GLib.List IdListFromComponentList(GLib.List components) {
			IntPtr raw_ret = gnome_vfs_mime_id_list_from_component_list(components == null ? IntPtr.Zero : components.Handle);
			GLib.List ret = new GLib.List(raw_ret);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_default_action(IntPtr mime_type);

		[Obsolete]
		public static Gnome.Vfs.MimeAction GetDefaultAction(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_default_action(native_mime_type);
			Gnome.Vfs.MimeAction ret = Gnome.Vfs.MimeAction.New (raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_vfs_mime_type_is_equal(IntPtr a, IntPtr b);

		public static bool TypeIsEqual(string a, string b) {
			IntPtr native_a = GLib.Marshaller.StringToPtrGStrdup (a);
			IntPtr native_b = GLib.Marshaller.StringToPtrGStrdup (b);
			bool raw_ret = gnome_vfs_mime_type_is_equal(native_a, native_b);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_a);
			GLib.Marshaller.Free (native_b);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_thaw();

		public static void Thaw() {
			gnome_vfs_mime_thaw();
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_default_application_for_uri(IntPtr uri, IntPtr mime_type);

		public static Gnome.Vfs.MimeApplication GetDefaultApplicationForUri(string uri, string mime_type) {
			IntPtr native_uri = GLib.Marshaller.StringToPtrGStrdup (uri);
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_default_application_for_uri(native_uri, native_mime_type);
			Gnome.Vfs.MimeApplication ret = raw_ret == IntPtr.Zero ? null : (Gnome.Vfs.MimeApplication) GLib.Opaque.GetOpaque (raw_ret, typeof (Gnome.Vfs.MimeApplication), false);
			GLib.Marshaller.Free (native_uri);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_component_list_free(IntPtr list);

		[Obsolete]
		public static void ComponentListFree(GLib.List list) {
			gnome_vfs_mime_component_list_free(list == null ? IntPtr.Zero : list.Handle);
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_get_default_action_type(IntPtr mime_type);

		[Obsolete]
		public static Gnome.Vfs.MimeActionType GetDefaultActionType(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_get_default_action_type(native_mime_type);
			Gnome.Vfs.MimeActionType ret = (Gnome.Vfs.MimeActionType) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_short_list_applications(IntPtr mime_type, IntPtr application_ids);

		[Obsolete]
		public static Gnome.Vfs.Result SetShortListApplications(string mime_type, GLib.List application_ids) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_set_short_list_applications(native_mime_type, application_ids == null ? IntPtr.Zero : application_ids.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_default_desktop_entry(IntPtr mime_type);

		[Obsolete]
		public static string GetDefaultDesktopEntry(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_default_desktop_entry(native_mime_type);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_keys_list_free(IntPtr mime_type_list);

		[Obsolete]
		public static void KeysListFree(GLib.List mime_type_list) {
			gnome_vfs_mime_keys_list_free(mime_type_list == null ? IntPtr.Zero : mime_type_list.Handle);
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_vfs_mime_can_be_executable(IntPtr mime_type);

		public static bool CanBeExecutable(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			bool raw_ret = gnome_vfs_mime_can_be_executable(native_mime_type);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_default_component(IntPtr mime_type, IntPtr component_iid);

		[Obsolete]
		public static Gnome.Vfs.Result SetDefaultComponent(string mime_type, string component_iid) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_component_iid = GLib.Marshaller.StringToPtrGStrdup (component_iid);
			int raw_ret = gnome_vfs_mime_set_default_component(native_mime_type, native_component_iid);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_component_iid);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_description(IntPtr mime_type, IntPtr description);

		[Obsolete]
		public static Gnome.Vfs.Result SetDescription(string mime_type, string description) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_description = GLib.Marshaller.StringToPtrGStrdup (description);
			int raw_ret = gnome_vfs_mime_set_description(native_mime_type, native_description);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_description);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_type_from_name_or_default(IntPtr filename, IntPtr defaultv);

		public static string TypeFromNameOrDefault(string filename, string defaultv) {
			IntPtr native_filename = GLib.Marshaller.StringToPtrGStrdup (filename);
			IntPtr native_defaultv = GLib.Marshaller.StringToPtrGStrdup (defaultv);
			IntPtr raw_ret = gnome_vfs_mime_type_from_name_or_default(native_filename, native_defaultv);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			GLib.Marshaller.Free (native_filename);
			GLib.Marshaller.Free (native_defaultv);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_default_action_type(IntPtr mime_type, int action_type);

		[Obsolete]
		public static Gnome.Vfs.Result SetDefaultActionType(string mime_type, Gnome.Vfs.MimeActionType action_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			int raw_ret = gnome_vfs_mime_set_default_action_type(native_mime_type, (int) action_type);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_default_component(IntPtr mime_type);

		[Obsolete]
		public static IntPtr GetDefaultComponent(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_default_component(native_mime_type);
			IntPtr ret = raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_reset();

		[Obsolete]
		public static void Reset() {
			gnome_vfs_mime_reset();
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_value(IntPtr mime_type, IntPtr key);

		public static string GetValue(string mime_type, string key) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_key = GLib.Marshaller.StringToPtrGStrdup (key);
			IntPtr raw_ret = gnome_vfs_mime_get_value(native_mime_type, native_key);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_key);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gnome_vfs_mime_id_in_component_list(IntPtr iid, IntPtr components);

		[Obsolete]
		public static bool IdInComponentList(string iid, GLib.List components) {
			IntPtr native_iid = GLib.Marshaller.StringToPtrGStrdup (iid);
			bool raw_ret = gnome_vfs_mime_id_in_component_list(native_iid, components == null ? IntPtr.Zero : components.Handle);
			bool ret = raw_ret;
			GLib.Marshaller.Free (native_iid);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_get_all_components(IntPtr mime_type);

		[Obsolete]
		public static GLib.List GetAllComponents(string mime_type) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr raw_ret = gnome_vfs_mime_get_all_components(native_mime_type);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_mime_type);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gnome_vfs_mime_remove_application_from_list(IntPtr applications, IntPtr application_id, out bool did_remove);

		[Obsolete]
		public static GLib.List RemoveApplicationFromList(GLib.List applications, string application_id, out bool did_remove) {
			IntPtr native_application_id = GLib.Marshaller.StringToPtrGStrdup (application_id);
			IntPtr raw_ret = gnome_vfs_mime_remove_application_from_list(applications == null ? IntPtr.Zero : applications.Handle, native_application_id, out did_remove);
			GLib.List ret = new GLib.List(raw_ret);
			GLib.Marshaller.Free (native_application_id);
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern void gnome_vfs_mime_extensions_list_free(IntPtr list);

		public static void ExtensionsListFree(GLib.List list) {
			gnome_vfs_mime_extensions_list_free(list == null ? IntPtr.Zero : list.Handle);
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_mime_set_extensions_list(IntPtr mime_type, IntPtr extensions_list);

		[Obsolete]
		public static Gnome.Vfs.Result SetExtensionsList(string mime_type, string extensions_list) {
			IntPtr native_mime_type = GLib.Marshaller.StringToPtrGStrdup (mime_type);
			IntPtr native_extensions_list = GLib.Marshaller.StringToPtrGStrdup (extensions_list);
			int raw_ret = gnome_vfs_mime_set_extensions_list(native_mime_type, native_extensions_list);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_mime_type);
			GLib.Marshaller.Free (native_extensions_list);
			return ret;
		}

#endregion
	}
}
