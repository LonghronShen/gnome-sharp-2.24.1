// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome.Vfs {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Check {

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_check_same_fs_uris(IntPtr source_uri, IntPtr target_uri, out bool same_fs_return);

		public static Gnome.Vfs.Result SameFsUris(Gnome.Vfs.Uri source_uri, Gnome.Vfs.Uri target_uri, out bool same_fs_return) {
			int raw_ret = gnome_vfs_check_same_fs_uris(source_uri == null ? IntPtr.Zero : source_uri.Handle, target_uri == null ? IntPtr.Zero : target_uri.Handle, out same_fs_return);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_check_same_fs_uris_cancellable(IntPtr a, IntPtr b, out bool same_fs_return, IntPtr context);

		public static Gnome.Vfs.Result SameFsUrisCancellable(Gnome.Vfs.Uri a, Gnome.Vfs.Uri b, out bool same_fs_return, Gnome.Vfs.Context context) {
			int raw_ret = gnome_vfs_check_same_fs_uris_cancellable(a == null ? IntPtr.Zero : a.Handle, b == null ? IntPtr.Zero : b.Handle, out same_fs_return, context == null ? IntPtr.Zero : context.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_check_same_fs(IntPtr source, IntPtr target, out bool same_fs_return);

		public static Gnome.Vfs.Result SameFs(string source, string target, out bool same_fs_return) {
			IntPtr native_source = GLib.Marshaller.StringToPtrGStrdup (source);
			IntPtr native_target = GLib.Marshaller.StringToPtrGStrdup (target);
			int raw_ret = gnome_vfs_check_same_fs(native_source, native_target, out same_fs_return);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			GLib.Marshaller.Free (native_source);
			GLib.Marshaller.Free (native_target);
			return ret;
		}

#endregion
	}
}
