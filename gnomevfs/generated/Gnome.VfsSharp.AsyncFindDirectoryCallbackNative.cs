// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome.VfsSharp {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
	internal delegate void AsyncFindDirectoryCallbackNative(IntPtr handle, IntPtr results, IntPtr data);

	internal class AsyncFindDirectoryCallbackInvoker {

		AsyncFindDirectoryCallbackNative native_cb;
		IntPtr __data;
		GLib.DestroyNotify __notify;

		~AsyncFindDirectoryCallbackInvoker ()
		{
			if (__notify == null)
				return;
			__notify (__data);
		}

		internal AsyncFindDirectoryCallbackInvoker (AsyncFindDirectoryCallbackNative native_cb) : this (native_cb, IntPtr.Zero, null) {}

		internal AsyncFindDirectoryCallbackInvoker (AsyncFindDirectoryCallbackNative native_cb, IntPtr data) : this (native_cb, data, null) {}

		internal AsyncFindDirectoryCallbackInvoker (AsyncFindDirectoryCallbackNative native_cb, IntPtr data, GLib.DestroyNotify notify)
		{
			this.native_cb = native_cb;
			__data = data;
			__notify = notify;
		}

		internal Gnome.Vfs.AsyncFindDirectoryCallback Handler {
			get {
				return new Gnome.Vfs.AsyncFindDirectoryCallback(InvokeNative);
			}
		}

		void InvokeNative (Gnome.Vfs.AsyncHandle handle, GLib.List results)
		{
			native_cb (handle == null ? IntPtr.Zero : handle.Handle, results == null ? IntPtr.Zero : results.Handle, __data);
		}
	}

	internal class AsyncFindDirectoryCallbackWrapper {

		public void NativeCallback (IntPtr handle, IntPtr results, IntPtr data)
		{
			try {
				managed (handle == IntPtr.Zero ? null : (Gnome.Vfs.AsyncHandle) GLib.Opaque.GetOpaque (handle, typeof (Gnome.Vfs.AsyncHandle), false), new GLib.List(results));
				if (release_on_call)
					gch.Free ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		bool release_on_call = false;
		GCHandle gch;

		public void PersistUntilCalled ()
		{
			release_on_call = true;
			gch = GCHandle.Alloc (this);
		}

		internal AsyncFindDirectoryCallbackNative NativeDelegate;
		Gnome.Vfs.AsyncFindDirectoryCallback managed;

		public AsyncFindDirectoryCallbackWrapper (Gnome.Vfs.AsyncFindDirectoryCallback managed)
		{
			this.managed = managed;
			if (managed != null)
				NativeDelegate = new AsyncFindDirectoryCallbackNative (NativeCallback);
		}

		public static Gnome.Vfs.AsyncFindDirectoryCallback GetManagedDelegate (AsyncFindDirectoryCallbackNative native)
		{
			if (native == null)
				return null;
			AsyncFindDirectoryCallbackWrapper wrapper = (AsyncFindDirectoryCallbackWrapper) native.Target;
			if (wrapper == null)
				return null;
			return wrapper.managed;
		}
	}
#endregion
}
