// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gnome.Vfs {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Truncate {

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_truncate_handle(IntPtr handle, long length);

		public static Gnome.Vfs.Result Handle(Gnome.Vfs.Handle handle, long length) {
			int raw_ret = gnome_vfs_truncate_handle(handle == null ? IntPtr.Zero : handle.Handle, length);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_truncate_uri(IntPtr uri, long length);

		public static Gnome.Vfs.Result Uri(Gnome.Vfs.Uri uri, long length) {
			int raw_ret = gnome_vfs_truncate_uri(uri == null ? IntPtr.Zero : uri.Handle, length);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_truncate_uri_cancellable(IntPtr uri, long length, IntPtr context);

		public static Gnome.Vfs.Result UriCancellable(Gnome.Vfs.Uri uri, long length, Gnome.Vfs.Context context) {
			int raw_ret = gnome_vfs_truncate_uri_cancellable(uri == null ? IntPtr.Zero : uri.Handle, length, context == null ? IntPtr.Zero : context.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

		[DllImport("gnomevfs-2", CallingConvention = CallingConvention.Cdecl)]
		static extern int gnome_vfs_truncate_handle_cancellable(IntPtr handle, long length, IntPtr context);

		public static Gnome.Vfs.Result HandleCancellable(Gnome.Vfs.Handle handle, long length, Gnome.Vfs.Context context) {
			int raw_ret = gnome_vfs_truncate_handle_cancellable(handle == null ? IntPtr.Zero : handle.Handle, length, context == null ? IntPtr.Zero : context.Handle);
			Gnome.Vfs.Result ret = (Gnome.Vfs.Result) raw_ret;
			return ret;
		}

#endregion
	}
}
