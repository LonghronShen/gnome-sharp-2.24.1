// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Art {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class SVPRenderAAIter : GLib.Opaque {

		[DllImport("art_lgpl", CallingConvention = CallingConvention.Cdecl)]
		static extern void art_svp_render_aa_iter_done(IntPtr raw);

		public void Done() {
			art_svp_render_aa_iter_done(Handle);
		}

		[DllImport("art_lgpl", CallingConvention = CallingConvention.Cdecl)]
		static extern void art_svp_render_aa_iter_step(IntPtr raw, out int p_start, IntPtr p_steps, out int p_n_steps);

		public void Step(out int p_start, Art.SVPRenderAAStep p_steps, out int p_n_steps) {
			IntPtr native_p_steps = GLib.Marshaller.StructureToPtrAlloc (p_steps);
			art_svp_render_aa_iter_step(Handle, out p_start, native_p_steps, out p_n_steps);
			p_steps = Art.SVPRenderAAStep.New (native_p_steps);
			Marshal.FreeHGlobal (native_p_steps);
		}

		public SVPRenderAAIter(IntPtr raw) : base(raw) {}

#endregion
	}
}
